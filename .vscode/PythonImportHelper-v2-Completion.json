[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "pymysql",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pymysql",
        "description": "pymysql",
        "detail": "pymysql",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "Permalink",
        "importPath": "receipt.models",
        "description": "receipt.models",
        "isExtraImport": true,
        "detail": "receipt.models",
        "documentation": {}
    },
    {
        "label": "Receipt",
        "importPath": "receipt.models",
        "description": "receipt.models",
        "isExtraImport": true,
        "detail": "receipt.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "user.models",
        "description": "user.models",
        "isExtraImport": true,
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "TokenBlacklistView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "Payhere.asgi",
        "description": "Payhere.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "Payhere.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nload_dotenv()\nSECRET_KEY = os.environ.get(\"SECRET_KEY\", \"DEFAULT\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "SECRET_KEY = os.environ.get(\"SECRET_KEY\", \"DEFAULT\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"user\",",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"user\",\n    \"receipt\",\n    \"rest_framework\",",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "ROOT_URLCONF = \"Payhere.urls\"\nREST_FRAMEWORK = {\n    \"DEFAULT_PERMISSION_CLASSES\": [\"rest_framework.permissions.IsAuthenticated\"],\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n        # \"rest_framework.authentication.TokenAuthentication\",\n        # \"rest_framework.authentication.SessionAuthentication\",\n    ],\n    \"DEFAULT_PARSER_CLASSES\": [\n        \"rest_framework.parsers.JSONParser\",",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"DEFAULT_PERMISSION_CLASSES\": [\"rest_framework.permissions.IsAuthenticated\"],\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n        # \"rest_framework.authentication.TokenAuthentication\",\n        # \"rest_framework.authentication.SessionAuthentication\",\n    ],\n    \"DEFAULT_PARSER_CLASSES\": [\n        \"rest_framework.parsers.JSONParser\",\n        \"rest_framework.parsers.FormParser\",",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "WSGI_APPLICATION = \"Payhere.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n# DATABASES = {\n#     \"default\": {\n#         \"ENGINE\": \"django.db.backends.sqlite3\",\n#         \"NAME\": BASE_DIR / \"db.sqlite3\",\n#     }\n# }\npymysql.install_as_MySQLdb()",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.mysql\",\n        \"NAME\": \"payheredb\",\n        \"USER\": \"root\",\n        \"PASSWORD\": os.environ.get(\"DB_PASSWORD\", \"DEFAULT\"),\n        \"HOST\": \"localhost\",\n        \"PORT\": \"3306\",\n    }\n}",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "LANGUAGE_CODE = \"ko-KR\"\nTIME_ZONE = \"Asia/Seoul\"\nUSE_I18N = True\nUSE_TZ = False\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "TIME_ZONE = \"Asia/Seoul\"\nUSE_I18N = True\nUSE_TZ = False\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"user.User\"",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = False\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"user.User\"\nfrom datetime import timedelta",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "USE_TZ = False\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"user.User\"\nfrom datetime import timedelta\nSIMPLE_JWT = {",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"user.User\"\nfrom datetime import timedelta\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=30),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=3),\n    \"SIGNING_KEY\": SECRET_KEY,",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"user.User\"\nfrom datetime import timedelta\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=30),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=3),\n    \"SIGNING_KEY\": SECRET_KEY,\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n}",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"user.User\"\nfrom datetime import timedelta\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=30),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=3),\n    \"SIGNING_KEY\": SECRET_KEY,\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n}",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "Payhere.settings",
        "description": "Payhere.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=30),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=3),\n    \"SIGNING_KEY\": SECRET_KEY,\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n}",
        "detail": "Payhere.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "Payhere.urls",
        "description": "Payhere.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"users/\", include(\"user.urls\")),\n    path(\"receipts/\", include(\"receipt.urls\")),\n]",
        "detail": "Payhere.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "Payhere.wsgi",
        "description": "Payhere.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "Payhere.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "receipt.migrations.0001_initial",
        "description": "receipt.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Receipt\",\n            fields=[\n                (",
        "detail": "receipt.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "receipt.migrations.0002_remove_permalink_encode",
        "description": "receipt.migrations.0002_remove_permalink_encode",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"receipt\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"permalink\",\n            name=\"encode\",\n        ),\n    ]",
        "detail": "receipt.migrations.0002_remove_permalink_encode",
        "documentation": {}
    },
    {
        "label": "ReceiptAdmin",
        "kind": 6,
        "importPath": "receipt.admin",
        "description": "receipt.admin",
        "peekOfCode": "class ReceiptAdmin(admin.ModelAdmin):\n    list_display = [\"id\", \"user\", \"content\", \"outlay\"]\n    list_display_links = [\"content\", \"outlay\"]\n    list_filter = (\"user\",)\nadmin.site.register(Receipt, ReceiptAdmin)\nadmin.site.register(Permalink)",
        "detail": "receipt.admin",
        "documentation": {}
    },
    {
        "label": "ReceiptConfig",
        "kind": 6,
        "importPath": "receipt.apps",
        "description": "receipt.apps",
        "peekOfCode": "class ReceiptConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"receipt\"",
        "detail": "receipt.apps",
        "documentation": {}
    },
    {
        "label": "Receipt",
        "kind": 6,
        "importPath": "receipt.models",
        "description": "receipt.models",
        "peekOfCode": "class Receipt(models.Model):\n    user = models.ForeignKey(\"user.User\", on_delete=models.CASCADE)\n    date = models.DateTimeField()\n    content = models.CharField(max_length=50)\n    outlay = models.IntegerField()\n    desc = models.CharField(max_length=200, blank=True)\n    create_date = models.DateTimeField(auto_now_add=True)\nclass Permalink(models.Model):\n    refer_to = models.ForeignKey(Receipt, on_delete=models.CASCADE)\n    end_date = models.DateTimeField()",
        "detail": "receipt.models",
        "documentation": {}
    },
    {
        "label": "Permalink",
        "kind": 6,
        "importPath": "receipt.models",
        "description": "receipt.models",
        "peekOfCode": "class Permalink(models.Model):\n    refer_to = models.ForeignKey(Receipt, on_delete=models.CASCADE)\n    end_date = models.DateTimeField()",
        "detail": "receipt.models",
        "documentation": {}
    },
    {
        "label": "ReceiptSerializer",
        "kind": 6,
        "importPath": "receipt.serializers",
        "description": "receipt.serializers",
        "peekOfCode": "class ReceiptSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ReceiptModel\n        fields = \"__all__\"\n    def validate(self, data):\n        outlay_data = data.get(\"outlay\")\n        if outlay_data == 0:\n            raise serializers.ValidationError(\n                detail={\"error\": \"지출은 0원일 수 없습니다\"},\n            )",
        "detail": "receipt.serializers",
        "documentation": {}
    },
    {
        "label": "PermalinkSerializer",
        "kind": 6,
        "importPath": "receipt.serializers",
        "description": "receipt.serializers",
        "peekOfCode": "class PermalinkSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = PermalinkModel\n        fields = \"__all__\"\n    def create(self, validated_data):\n        permalink = PermalinkModel(**validated_data)\n        permalink.save()\n        return permalink",
        "detail": "receipt.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "receipt.urls",
        "description": "receipt.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.ReceiptListView.as_view()),\n    path(\"<int:receipt_id>/\", views.ReceiptDetailView.as_view()),\n    path(\"<int:receipt_id>/shared/\", views.PermalinkAdminView.as_view()),\n    path(\"shared/<int:permalink_id>/\", views.PermalinkView.as_view()),\n]",
        "detail": "receipt.urls",
        "documentation": {}
    },
    {
        "label": "ReceiptListView",
        "kind": 6,
        "importPath": "receipt.views",
        "description": "receipt.views",
        "peekOfCode": "class ReceiptListView(APIView):\n    # 내가 작성한 내역을 가져온다.\n    def get(self, request, **kwargs):\n        user = User.objects.get(id=request.user.id)\n        receipts = user.receipt_set.all().order_by(\"-date\")\n        receipt_serializer = ReceiptSerializer(receipts, many=True).data\n        return Response(receipt_serializer, status=status.HTTP_200_OK)\n    # 새로운 지출 내역을 작성한다.\n    def post(self, request):\n        data = request.data.copy()",
        "detail": "receipt.views",
        "documentation": {}
    },
    {
        "label": "ReceiptDetailView",
        "kind": 6,
        "importPath": "receipt.views",
        "description": "receipt.views",
        "peekOfCode": "class ReceiptDetailView(APIView):\n    def get_object(self, receipt_id):\n        try:\n            return Receipt.objects.get(id=receipt_id)\n        except Receipt.DoesNotExist:\n            raise Http404\n    # 특정 지출의 상세 내역을 확인한다.\n    def get(self, request, receipt_id):\n        user = request.user.id\n        receipt = self.get_object(receipt_id)",
        "detail": "receipt.views",
        "documentation": {}
    },
    {
        "label": "PermalinkView",
        "kind": 6,
        "importPath": "receipt.views",
        "description": "receipt.views",
        "peekOfCode": "class PermalinkView(APIView):\n    permission_classes = [permissions.AllowAny]\n    # 공유된 지출 내역을 조회한다.\n    def get(self, request, permalink_id):\n        try:\n            perma = Permalink.objects.get(id=permalink_id)\n        except Permalink.DoesNotExist:\n            raise Http404\n        # 유효기간 체크\n        if perma.end_date > timezone.now():",
        "detail": "receipt.views",
        "documentation": {}
    },
    {
        "label": "PermalinkAdminView",
        "kind": 6,
        "importPath": "receipt.views",
        "description": "receipt.views",
        "peekOfCode": "class PermalinkAdminView(APIView):\n    # 특정 지출 내역을 공유한다.\n    def post(self, request, receipt_id):\n        user = request.user.id\n        receipt = Receipt.objects.get(id=receipt_id)\n        if user == receipt.user.id:\n            end_date = timezone.now() + timedelta(minutes=3)\n            request.data[\"refer_to\"] = receipt_id\n            request.data[\"end_date\"] = end_date\n            perma_serializer = PermalinkSerializer(data=request.data)",
        "detail": "receipt.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "user.migrations.0001_initial",
        "description": "user.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"User\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "user.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UserConfig",
        "kind": 6,
        "importPath": "user.apps",
        "description": "user.apps",
        "peekOfCode": "class UserConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"user\"",
        "detail": "user.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "user.models",
        "description": "user.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n    def create_user(self, email, password=None):\n        if not email:\n            raise ValueError(\"Users must have an email\")\n        user = self.model(\n            email=email,\n        )\n        user.set_password(password)\n        user.save(using=self._db)\n        return user",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "user.models",
        "description": "user.models",
        "peekOfCode": "class User(AbstractBaseUser):\n    email = models.EmailField(\"이메일 주소\", max_length=100, unique=True)\n    password = models.CharField(\"비밀번호\", max_length=128)\n    join_date = models.DateTimeField(\"가입일\", auto_now_add=True)\n    is_active = models.BooleanField(\"계정 활성화 여부\", default=True)\n    is_admin = models.BooleanField(\"최고관리자 권한\", default=False)\n    USERNAME_FIELD = \"email\"\n    REQUIRED_FIELDS = []\n    objects = UserManager()\n    def __str__(self):",
        "detail": "user.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "user.serializers",
        "description": "user.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = UserModel\n        fields = [\"email\", \"password\"]\n    def create(self, validated_data):\n        password = validated_data.pop(\"password\", None)\n        user = UserModel(**validated_data)\n        user.set_password(password)\n        user.save()\n        return user",
        "detail": "user.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "user.urls",
        "description": "user.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.SignupView.as_view()),\n    path(\"login/\", TokenObtainPairView.as_view(), name=\"token_obtain_pair\"),\n    path(\"login/refresh/\", TokenRefreshView.as_view(), name=\"token_refresh\"),\n    path(\"logout/\", TokenBlacklistView.as_view(), name=\"token_blacklist\"),\n]",
        "detail": "user.urls",
        "documentation": {}
    },
    {
        "label": "SignupView",
        "kind": 6,
        "importPath": "user.views",
        "description": "user.views",
        "peekOfCode": "class SignupView(APIView):\n    permission_classes = [permissions.AllowAny]\n    def post(self, request):\n        user_serializer = UserSerializer(data=request.data)\n        if user_serializer.is_valid(raise_exception=True):\n            user_serializer.save()\n            return Response({\"message\": \"회원가입 완료\"}, status=status.HTTP_200_OK)\n        return Response(user_serializer.errors, status=status.HTTP_400_BAD_REQUEST)",
        "detail": "user.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"Payhere.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]